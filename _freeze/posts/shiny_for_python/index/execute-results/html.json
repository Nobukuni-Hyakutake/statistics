{
  "hash": "23128f7b404b8d8b6a609031cce6150b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Shiny for Python\"\nauthor: \"Nobukuni Hyakutake\"\ndate: \"2025-04-27\"\ndate-format: \"iso\"\ncategories: [Python]\nimage: \"field_mustard.jpeg\"\njupyter: python313\n---\n\n![](field_mustard.jpeg)\n\n## ペンギンのヒストグラムのダッシュボード\n\n下記のコードを`app.py`として保存する。\n\n::: {#31737760 .cell execution_count=1}\n``` {.python .cell-code}\nfrom pathlib import Path\nfrom plotnine import ggplot, aes, geom_histogram, geom_vline\nfrom faicons import icon_svg\nfrom palmerpenguins import load_penguins\nfrom shiny import reactive\nfrom shiny.express import input, render, ui\n\ndf = load_penguins()\napp_dir = Path(__file__).parent\n\nui.page_opts(title=\"Penguins histogram\", fillable=True)\n\nwith ui.sidebar(title=\"Filter controls\"):\n    ui.input_checkbox_group(\n        \"species\",\n        \"Species\",\n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n    )\n    ui.input_checkbox_group(\n        \"island\",\n        \"Island\",\n        [\"Biscoe\", \"Dream\", \"Torgersen\"],\n        selected=[\"Biscoe\", \"Dream\", \"Torgersen\"],\n    )\n\nwith ui.layout_column_wrap(fill=False):\n    with ui.value_box(showcase=icon_svg(\"earlybirds\")):\n        \"Number of penguins\"\n\n        @render.text\n        def count():\n            return filtered_df().shape[0]\n\n    with ui.value_box(showcase=icon_svg(\"ruler-horizontal\")):\n        \"Average bill length\"\n\n        @render.text\n        def bill_length():\n            return f\"{filtered_df()['bill_length_mm'].mean():.1f} mm\"\n\n    with ui.value_box(showcase=icon_svg(\"ruler-vertical\")):\n        \"Average bill depth\"\n\n        @render.text\n        def bill_depth():\n            return f\"{filtered_df()['bill_depth_mm'].mean():.1f} mm\"\n\n\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.card_header(\"Bill length\")\n\n        @render.plot\n        def length():\n            return (\n                ggplot(filtered_df(), aes(x=\"bill_length_mm\"))\n                + geom_histogram()\n                + geom_vline(\n                    xintercept=filtered_df()[\"bill_length_mm\"].mean(),\n                    color=\"green\",\n                    linetype=\"dashed\",\n                )\n            )\n\n\n@reactive.calc\ndef filtered_df():\n    filt_df = df[df[\"species\"].isin(input.species())]\n    filt_df = filt_df[filt_df[\"island\"].isin(input.island())]\n    return filt_df\n```\n:::\n\n\n下記を実行するとブラウザで下図のようなダッシュボードが出てくる。\n\n```\npython3 -m shiny run --launch-browser app.py\n```\n\n![](histogram_shiny.png)\n\napp.pyのファイルは下記\n\nhttps://github.com/Nobukuni-Hyakutake/statistics/blob/724a2344982aa25408accf4f82373388a0298972/trial/shiny_dashboard_02/app.py\n\n## 参考文献\n\n- [Shiny > Install, create, & run](https://shiny.posit.co/py/docs/install-create-run.html)\n\n## Python version\n\n::: {#d3c9b1e4 .cell execution_count=2}\n``` {.python .cell-code}\nimport platform\n\"Python version \"+platform.python_version()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n'Python version 3.13.3'\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}