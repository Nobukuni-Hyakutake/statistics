{
  "hash": "f03d1aa7d12c776d557a199aa956d765",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Shiny for Python\"\nauthor: \"Nobukuni Hyakutake\"\ndate: \"2025-04-27\"\ndate-format: \"iso\"\ncategories: [Python]\nimage: \"field_mustard.jpeg\"\njupyter: python313\n---\n\n![](field_mustard.jpeg)\n\n## ペンギンのヒストグラムのダッシュボードをShiny for Pythonでつくる\n\n下記の[Shiny Express](https://shiny.posit.co/py/api/express/)のコードを[app.py](https://github.com/Nobukuni-Hyakutake/statistics/blob/main/trial/shiny_dashboard_02/app.py)として保存する。\n\n::: {#7584c4cc .cell execution_count=1}\n``` {.python .cell-code}\nfrom pathlib import Path\nfrom plotnine import ggplot, aes, geom_histogram, geom_vline\nfrom faicons import icon_svg\nfrom palmerpenguins import load_penguins\nfrom shiny import reactive\nfrom shiny.express import input, render, ui\n\ndf = load_penguins()\napp_dir = Path(__file__).parent\n\nui.page_opts(title=\"Penguins histogram\", fillable=True)\n\nwith ui.sidebar(title=\"Filter controls\"):\n    ui.input_checkbox_group(\n        \"species\",\n        \"Species\",\n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n    )\n    ui.input_checkbox_group(\n        \"island\",\n        \"Island\",\n        [\"Biscoe\", \"Dream\", \"Torgersen\"],\n        selected=[\"Biscoe\", \"Dream\", \"Torgersen\"],\n    )\n\nwith ui.layout_column_wrap(fill=False):\n    with ui.value_box(showcase=icon_svg(\"earlybirds\")):\n        \"Number of penguins\"\n\n        @render.text\n        def count():\n            return filtered_df().shape[0]\n\n    with ui.value_box(showcase=icon_svg(\"ruler-horizontal\")):\n        \"Average bill length\"\n\n        @render.text\n        def bill_length():\n            return f\"{filtered_df()['bill_length_mm'].mean():.1f} mm\"\n\n    with ui.value_box(showcase=icon_svg(\"ruler-vertical\")):\n        \"Average bill depth\"\n\n        @render.text\n        def bill_depth():\n            return f\"{filtered_df()['bill_depth_mm'].mean():.1f} mm\"\n\n\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.card_header(\"Bill length\")\n\n        @render.plot\n        def length():\n            return (\n                ggplot(filtered_df(), aes(x=\"bill_length_mm\"))\n                + geom_histogram()\n                + geom_vline(\n                    xintercept=filtered_df()[\"bill_length_mm\"].mean(),\n                    color=\"green\",\n                    linetype=\"dashed\",\n                )\n            )\n\n\n@reactive.calc\ndef filtered_df():\n    filt_df = df[df[\"species\"].isin(input.species())]\n    filt_df = filt_df[filt_df[\"island\"].isin(input.island())]\n    return filt_df\n```\n:::\n\n\n下記をターミナル/コマンドプロンプトで実行するとブラウザで下図のようなダッシュボードが出てくる。\n\n``` bash\npython3 -m shiny run --launch-browser app.py\n```\n\n![](histogram_shiny.png)\n\n## shinyを実行ファイル化する(Mac OS)\n\n下記の[Shiny Core](https://shiny.posit.co/py/api/core/)のコードを[file1.py](https://github.com/Nobukuni-Hyakutake/statistics/blob/main/trial/shiny_dashboard_02/file1.py)として保存する。\n\n::: {#ca494d05 .cell execution_count=2}\n``` {.python .cell-code}\nfrom shiny import App, render, ui\nfrom shiny._main import run_app\n\napp_ui = ui.page_fluid(\n    ui.h2(\"Hello Shiny!\"),\n    ui.input_slider(\"n\", \"N\", 0, 100, 20),\n    ui.output_text_verbatim(\"txt\"),\n)\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"n*2 is {input.n() * 2}\"\napp = App(app_ui, server)\nrun_app(app,launch_browser=True)\n```\n:::\n\n\nMacのターミナルでfile1.pyがあるフォルダにカレントディレクトリを移動してから下記を実行する\n\n```bash\npython3.13 -m venv .venv\nsource .venv/bin/activate\npip install pyinstaller shiny\npyinstaller -F --collect-all shiny --name file1_app2 file1.py\n```\n\nしばらく待つとdist/file1_app2が作成されるのでダブルクリックして実行する。すると下図の画面が出てアプリの起動が完了。\n\n![](file1_app.png)\n\nアプリの終了時はブラウザを閉じ、ターミナルでCtrl+Cを押してから閉じる。\n\nなお[Shiny Express](https://shiny.posit.co/py/api/express/)のコードから実行ファイルをつくる方法があるのかは不明。\n\n## 参考文献\n\n- [Shiny > Install, create, & run](https://shiny.posit.co/py/docs/install-create-run.html)\n- [How to un pyinstaller converted python app with Shiny for Python](https://stackoverflow.com/questions/73257387/how-to-un-pyinstaller-converted-python-app-with-shiny-for-python)\n- [【Pyinstaller】MacOS用、Windows用のexeをそれぞれ作成する失敗しない方法](https://qiita.com/mizu4my/items/5aff60c7eed4e2cc6c18)\n- [Quarto - GitHub Pages](https://github.com/quarto-dev/quarto-web/blob/main/docs/publishing/github-pages.qmd)\n\n## Python version\n\n::: {#28c30999 .cell execution_count=3}\n``` {.python .cell-code}\nimport platform\n\"Python version \"+platform.python_version()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n'Python version 3.13.3'\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}