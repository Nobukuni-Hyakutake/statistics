---
title: "Shiny for Python"
author: "Nobukuni Hyakutake"
date: "2025-04-27"
date-format: "iso"
categories: [Python]
image: "field_mustard.jpeg"
jupyter: python313
---

![](field_mustard.jpeg)

## ペンギンのヒストグラムのダッシュボードをShiny for Pythonでつくる

下記の[Shiny Express](https://shiny.posit.co/py/api/express/)のコードを[app.py](https://github.com/Nobukuni-Hyakutake/statistics/blob/main/trial/shiny_dashboard_02/app.py)として保存する。

```{python}
#| eval: false

from pathlib import Path
from plotnine import ggplot, aes, geom_histogram, geom_vline
from faicons import icon_svg
from palmerpenguins import load_penguins
from shiny import reactive
from shiny.express import input, render, ui

df = load_penguins()
app_dir = Path(__file__).parent

ui.page_opts(title="Penguins histogram", fillable=True)

with ui.sidebar(title="Filter controls"):
    ui.input_checkbox_group(
        "species",
        "Species",
        ["Adelie", "Gentoo", "Chinstrap"],
        selected=["Adelie", "Gentoo", "Chinstrap"],
    )
    ui.input_checkbox_group(
        "island",
        "Island",
        ["Biscoe", "Dream", "Torgersen"],
        selected=["Biscoe", "Dream", "Torgersen"],
    )

with ui.layout_column_wrap(fill=False):
    with ui.value_box(showcase=icon_svg("earlybirds")):
        "Number of penguins"

        @render.text
        def count():
            return filtered_df().shape[0]

    with ui.value_box(showcase=icon_svg("ruler-horizontal")):
        "Average bill length"

        @render.text
        def bill_length():
            return f"{filtered_df()['bill_length_mm'].mean():.1f} mm"

    with ui.value_box(showcase=icon_svg("ruler-vertical")):
        "Average bill depth"

        @render.text
        def bill_depth():
            return f"{filtered_df()['bill_depth_mm'].mean():.1f} mm"


with ui.layout_columns():
    with ui.card(full_screen=True):
        ui.card_header("Bill length")

        @render.plot
        def length():
            return (
                ggplot(filtered_df(), aes(x="bill_length_mm"))
                + geom_histogram()
                + geom_vline(
                    xintercept=filtered_df()["bill_length_mm"].mean(),
                    color="green",
                    linetype="dashed",
                )
            )


@reactive.calc
def filtered_df():
    filt_df = df[df["species"].isin(input.species())]
    filt_df = filt_df[filt_df["island"].isin(input.island())]
    return filt_df

```

下記をターミナル/コマンドプロンプトで実行するとブラウザで下図のようなダッシュボードが出てくる。

``` bash
python3 -m shiny run --launch-browser app.py
```

![](histogram_shiny.png)

## shinyを実行ファイル化する(Mac OS)

下記の[Shiny Core](https://shiny.posit.co/py/api/core/)のコードを[file1.py](https://github.com/Nobukuni-Hyakutake/statistics/blob/main/trial/shiny_dashboard_02/file1.py)として保存する。

```{python}
#| eval: false
from shiny import App, render, ui
from shiny._main import run_app

app_ui = ui.page_fluid(
    ui.h2("Hello Shiny!"),
    ui.input_slider("n", "N", 0, 100, 20),
    ui.output_text_verbatim("txt"),
)
def server(input, output, session):
    @output
    @render.text
    def txt():
        return f"n*2 is {input.n() * 2}"
app = App(app_ui, server)
run_app(app)
```

Macのターミナルでfile1.pyがあるフォルダにカレントディレクトリを移動してから下記を実行する

```bash
python3.13 -m venv .venv
source .venv/bin/activate
pip install pyinstaller shiny
pyinstaller -F --collect-all shiny --name file1_app file1.py
```

しばらく待つとdist/file1_appが作成されるのでダブルクリックして実行する。するとターミナルの新しい画面が立ち上がり、下記のように表示されるので`http://127.0.0.1:8000`の部分をコピーしブラウザのアドレス欄に貼り付ける。

```bash
INFO:     Started server process [12432]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
```

下図の画面が出てアプリの起動が完了。

![](file1_app.png)

アプリの終了時はブラウザを閉じ、ターミナルでCtrl+Cを押してから閉じる。

なお[Shiny Express](https://shiny.posit.co/py/api/express/)のコードから実行ファイルをつくる方法があるのかは不明。

## 参考文献

- [Shiny > Install, create, & run](https://shiny.posit.co/py/docs/install-create-run.html)
- [How to un pyinstaller converted python app with Shiny for Python](https://stackoverflow.com/questions/73257387/how-to-un-pyinstaller-converted-python-app-with-shiny-for-python)
- [【Pyinstaller】MacOS用、Windows用のexeをそれぞれ作成する失敗しない方法](https://qiita.com/mizu4my/items/5aff60c7eed4e2cc6c18)
- [Quarto - GitHub Pages](https://github.com/quarto-dev/quarto-web/blob/main/docs/publishing/github-pages.qmd)

## Python version

```{python}
import platform
"Python version "+platform.python_version()
```
