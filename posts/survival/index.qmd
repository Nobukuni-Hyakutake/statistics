---
title: "生存分析"
author: "Nobukuni Hyakutake"
date: "2023-02-13"
date-format: "iso"
categories: [R]
---

## パッケージの読み込み

```{r}
library(survival)
library(tidyverse)
```

## データの読み込み

ライフのデータ

```{r}
dsu01<-read_csv("
  life
  28
  30
  32
  30
  25
  27
  24
  23
  29
  29
  29
  31
  38
  33
  32
  29
  30
  18
  28
  28
  24
  23
  28
  29
  27
  26
  28
  28
  28
  27
  ",show_col_types = FALSE
)
```

```{r}
hist(dsu01$life,breaks = max(dsu01$life)-min(dsu01$life)+1)
```

## ワイブル

### 確率密度関数

$$
f(t)=\frac{m}{\eta}\left(\frac{t}{\eta}\right)^{m-1}e^{-\left(\frac{t}{\eta}\right)^m}
$$

```{r}
weibull_d<-function(m,t,eta){
  k<-(m/eta)*(t/eta)^(m-1)*exp(-1*((t/eta)^m))
  return(k)}
```

$m=2$, $\eta=15$の場合

```{r}
m1<-2
eta1<-15
plot(weibull_d(m1,c(1:35),eta1))
```

### ワイブル分布に従う乱数

```{r}
i<-rweibull(1000,shape = m1,scale = eta1)
hist(i)
```

乱数からワイブルのパラメーターを算出する方法：survregを使う。

```{r}
t<-survreg(Surv(i)~1, dist="weibull")
```

survregの結果は、上述の確率密度関数のパラメーターとして使うには換算する必要がある。

$m$ 

```{r}
1/t$scale
```

$\eta$

```{r}
exp(unname(t$coefficients))
```

## R version

```{r}
R.version.string
```
## Python

```{python}
from reliability.Fitters import Fit_Weibull_2P
import matplotlib.pyplot as plt
fail_times = [
9402.7,
6082.4,
13367.2,
10644.6,
8632.0,
3043.4,
12860.2,
1034.5,
2550.9,
3637.1
]
wb = Fit_Weibull_2P(failures=fail_times)
plt.show()
```

```{python}
from reliability.Distributions import Weibull_Distribution
from reliability.Fitters import Fit_Weibull_3P
from reliability.Other_functions import make_right_censored_data, histogram
import matplotlib.pyplot as plt

a = 30
b = 2
g = 20
threshold=55
dist = Weibull_Distribution(alpha=a, beta=b, gamma=g) # generate a weibull distribution
raw_data = dist.random_samples(500, seed=2)  # create some data from the distribution
data = make_right_censored_data(raw_data,threshold=threshold) #right censor some of the data
print('There are', len(data.right_censored), 'right censored items.')
wbf = Fit_Weibull_3P(failures=data.failures, right_censored=data.right_censored, show_probability_plot=False, print_results=False)  # fit the Weibull_3P distribution
print('Fit_Weibull_3P parameters:\nAlpha:', wbf.alpha, '\nBeta:', wbf.beta, '\nGamma', wbf.gamma)
histogram(raw_data,white_above=threshold) # generates the histogram using optimal bin width and shades the censored part as white
dist.PDF(label='True Distribution')  # plots the true distribution's PDF
wbf.distribution.PDF(label='Fit_Weibull_3P', linestyle='--')  # plots to PDF of the fitted Weibull_3P
plt.title('Fitting comparison for failures and right censored data')
plt.legend()
plt.show()
```

## 参考サイト

[Python package reliability - Fitting a specific distribution to data](https://reliability.readthedocs.io/en/latest/Fitting%20a%20specific%20distribution%20to%20data.html)
